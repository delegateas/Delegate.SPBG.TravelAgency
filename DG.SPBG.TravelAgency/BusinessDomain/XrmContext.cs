//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Runtime.Serialization;

[assembly: ProxyTypesAssembly()]


namespace DG.XrmFramework.BusinessDomain.ServiceContext {
    
    
    [DataContract()]
    public enum dg_bookingState {
        
        [EnumMember()]
        Active = 0,
        
        [EnumMember()]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dg_booking_statuscode {
        
        [EnumMember()]
        Active = 1,
        
        [EnumMember()]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum dg_carState {
        
        [EnumMember()]
        Active = 0,
        
        [EnumMember()]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dg_car_statuscode {
        
        [EnumMember()]
        Active = 1,
        
        [EnumMember()]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum dg_countryState {
        
        [EnumMember()]
        Active = 0,
        
        [EnumMember()]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dg_country_statuscode {
        
        [EnumMember()]
        Active = 1,
        
        [EnumMember()]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum dg_hotelState {
        
        [EnumMember()]
        Active = 0,
        
        [EnumMember()]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dg_hotel_statuscode {
        
        [EnumMember()]
        Active = 1,
        
        [EnumMember()]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum dg_planeState {
        
        [EnumMember()]
        Active = 0,
        
        [EnumMember()]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dg_plane_statuscode {
        
        [EnumMember()]
        Active = 1,
        
        [EnumMember()]
        Inactive = 2,
    }
    
    [EntityLogicalName("dg_booking")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_booking : ExtendedEntity<dg_bookingState, dg_booking_statuscode> {
        
        public const string EntityLogicalName = "dg_booking";
        
        public const int EntityTypeCode = 10005;
        
        public dg_booking() : 
                base(EntityLogicalName) {
        }
        
        public dg_booking(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dg_name");
            }
        }
        
        [AttributeLogicalName("dg_bookingid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_bookingid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Booking</para>
        /// </summary>
        [AttributeLogicalName("dg_bookingid")]
        public Guid? dg_bookingId {
            get {
                return GetAttributeValue<Guid?>("dg_bookingid");
            }
            set {
                SetId("dg_bookingid", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Booking</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public dg_booking_statuscode? statuscode {
            get {
                return GetOptionSetValue<dg_booking_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Booking</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        public dg_bookingState? statecode {
            get {
                return GetOptionSetValue<dg_bookingState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Owner Id Type</para>
        /// </summary>
        [AttributeLogicalName("owneridtype")]
        public string OwnerIdType {
            get {
                return GetAttributeValue<string>("owneridtype");
            }
            set {
                SetAttributeValue("owneridtype", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the owner</para>
        /// </summary>
        [AttributeLogicalName("owneridname")]
        public string OwnerIdName {
            get {
                return GetAttributeValue<string>("owneridname");
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfbyname")]
        public string ModifiedOnBehalfByName {
            get {
                return GetAttributeValue<string>("modifiedonbehalfbyname");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        [AttributeLogicalName("modifiedbyname")]
        public string ModifiedByName {
            get {
                return GetAttributeValue<string>("modifiedbyname");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        [AttributeLogicalName("dg_planename")]
        public string dg_PlaneName {
            get {
                return GetAttributeValue<string>("dg_planename");
            }
        }
        
        /// <summary>
        /// <para></para>
        /// <para>Display Name: Plane</para>
        /// </summary>
        [AttributeLogicalName("dg_plane")]
        public EntityReference dg_Plane {
            get {
                return GetAttributeValue<EntityReference>("dg_plane");
            }
            set {
                SetAttributeValue("dg_plane", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        public string dg_name {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        [AttributeLogicalName("dg_hotelname")]
        public string dg_HotelName {
            get {
                return GetAttributeValue<string>("dg_hotelname");
            }
        }
        
        /// <summary>
        /// <para></para>
        /// <para>Display Name: Hotel</para>
        /// </summary>
        [AttributeLogicalName("dg_hotel")]
        public EntityReference dg_Hotel {
            get {
                return GetAttributeValue<EntityReference>("dg_hotel");
            }
            set {
                SetAttributeValue("dg_hotel", value);
            }
        }
        
        [AttributeLogicalName("dg_carname")]
        public string dg_CarName {
            get {
                return GetAttributeValue<string>("dg_carname");
            }
        }
        
        /// <summary>
        /// <para></para>
        /// <para>Display Name: Car</para>
        /// </summary>
        [AttributeLogicalName("dg_car")]
        public EntityReference dg_Car {
            get {
                return GetAttributeValue<EntityReference>("dg_car");
            }
            set {
                SetAttributeValue("dg_car", value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfbyname")]
        public string CreatedOnBehalfByName {
            get {
                return GetAttributeValue<string>("createdonbehalfbyname");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        [AttributeLogicalName("createdbyname")]
        public string CreatedByName {
            get {
                return GetAttributeValue<string>("createdbyname");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        [AttributeLogicalName("dg_car")]
        [RelationshipSchemaName("dg_dg_car_dg_booking_Car")]
        public dg_car dg_dg_car_dg_booking_Car {
            get {
                return GetRelatedEntity<dg_car>("dg_dg_car_dg_booking_Car", null);
            }
            set {
                SetRelatedEntity("dg_dg_car_dg_booking_Car", null, value);
            }
        }
        
        [AttributeLogicalName("dg_hotel")]
        [RelationshipSchemaName("dg_dg_hotel_dg_booking_Hotel")]
        public dg_hotel dg_dg_hotel_dg_booking_Hotel {
            get {
                return GetRelatedEntity<dg_hotel>("dg_dg_hotel_dg_booking_Hotel", null);
            }
            set {
                SetRelatedEntity("dg_dg_hotel_dg_booking_Hotel", null, value);
            }
        }
        
        [AttributeLogicalName("dg_plane")]
        [RelationshipSchemaName("dg_dg_plane_dg_booking_Plane")]
        public dg_plane dg_dg_plane_dg_booking_Plane {
            get {
                return GetRelatedEntity<dg_plane>("dg_dg_plane_dg_booking_Plane", null);
            }
            set {
                SetRelatedEntity("dg_dg_plane_dg_booking_Plane", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_dg_booking_dg_car_Booking")]
        public IEnumerable<dg_car> dg_dg_booking_dg_car_Booking {
            get {
                return GetRelatedEntities<dg_car>("dg_dg_booking_dg_car_Booking", null);
            }
            set {
                SetRelatedEntities("dg_dg_booking_dg_car_Booking", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_dg_booking_dg_hotel_Booking")]
        public IEnumerable<dg_hotel> dg_dg_booking_dg_hotel_Booking {
            get {
                return GetRelatedEntities<dg_hotel>("dg_dg_booking_dg_hotel_Booking", null);
            }
            set {
                SetRelatedEntities("dg_dg_booking_dg_hotel_Booking", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_dg_booking_dg_plane_Booking")]
        public IEnumerable<dg_plane> dg_dg_booking_dg_plane_Booking {
            get {
                return GetRelatedEntities<dg_plane>("dg_dg_booking_dg_plane_Booking", null);
            }
            set {
                SetRelatedEntities("dg_dg_booking_dg_plane_Booking", null, value);
            }
        }
    }
    
    [EntityLogicalName("dg_car")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_car : ExtendedEntity<dg_carState, dg_car_statuscode> {
        
        public const string EntityLogicalName = "dg_car";
        
        public const int EntityTypeCode = 10008;
        
        public dg_car() : 
                base(EntityLogicalName) {
        }
        
        public dg_car(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dg_name");
            }
        }
        
        [AttributeLogicalName("dg_carid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_carid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Car</para>
        /// </summary>
        [AttributeLogicalName("dg_carid")]
        public Guid? dg_carId {
            get {
                return GetAttributeValue<Guid?>("dg_carid");
            }
            set {
                SetId("dg_carid", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Car</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public dg_car_statuscode? statuscode {
            get {
                return GetOptionSetValue<dg_car_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Car</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        public dg_carState? statecode {
            get {
                return GetOptionSetValue<dg_carState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Owner Id Type</para>
        /// </summary>
        [AttributeLogicalName("owneridtype")]
        public string OwnerIdType {
            get {
                return GetAttributeValue<string>("owneridtype");
            }
            set {
                SetAttributeValue("owneridtype", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the owner</para>
        /// </summary>
        [AttributeLogicalName("owneridname")]
        public string OwnerIdName {
            get {
                return GetAttributeValue<string>("owneridname");
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfbyname")]
        public string ModifiedOnBehalfByName {
            get {
                return GetAttributeValue<string>("modifiedonbehalfbyname");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        [AttributeLogicalName("modifiedbyname")]
        public string ModifiedByName {
            get {
                return GetAttributeValue<string>("modifiedbyname");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para></para>
        /// <para>Display Name: Rent To</para>
        /// </summary>
        [AttributeLogicalName("dg_rentto")]
        public DateTime? dg_RentTo {
            get {
                return GetAttributeValue<DateTime?>("dg_rentto");
            }
            set {
                SetAttributeValue("dg_rentto", value);
            }
        }
        
        /// <summary>
        /// <para></para>
        /// <para>Display Name: Rent From</para>
        /// </summary>
        [AttributeLogicalName("dg_rentfrom")]
        public DateTime? dg_RentFrom {
            get {
                return GetAttributeValue<DateTime?>("dg_rentfrom");
            }
            set {
                SetAttributeValue("dg_rentfrom", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        public string dg_name {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        [AttributeLogicalName("dg_countryname")]
        public string dg_CountryName {
            get {
                return GetAttributeValue<string>("dg_countryname");
            }
        }
        
        /// <summary>
        /// <para></para>
        /// <para>Display Name: Country</para>
        /// </summary>
        [AttributeLogicalName("dg_country")]
        public EntityReference dg_Country {
            get {
                return GetAttributeValue<EntityReference>("dg_country");
            }
            set {
                SetAttributeValue("dg_country", value);
            }
        }
        
        [AttributeLogicalName("dg_bookingname")]
        public string dg_BookingName {
            get {
                return GetAttributeValue<string>("dg_bookingname");
            }
        }
        
        /// <summary>
        /// <para></para>
        /// <para>Display Name: Booking</para>
        /// </summary>
        [AttributeLogicalName("dg_booking")]
        public EntityReference dg_Booking {
            get {
                return GetAttributeValue<EntityReference>("dg_booking");
            }
            set {
                SetAttributeValue("dg_booking", value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfbyname")]
        public string CreatedOnBehalfByName {
            get {
                return GetAttributeValue<string>("createdonbehalfbyname");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        [AttributeLogicalName("createdbyname")]
        public string CreatedByName {
            get {
                return GetAttributeValue<string>("createdbyname");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        [AttributeLogicalName("dg_country")]
        [RelationshipSchemaName("dg_dg_country_dg_car_Country")]
        public dg_country dg_dg_country_dg_car_Country {
            get {
                return GetRelatedEntity<dg_country>("dg_dg_country_dg_car_Country", null);
            }
            set {
                SetRelatedEntity("dg_dg_country_dg_car_Country", null, value);
            }
        }
        
        [AttributeLogicalName("dg_booking")]
        [RelationshipSchemaName("dg_dg_booking_dg_car_Booking")]
        public dg_booking dg_dg_booking_dg_car_Booking {
            get {
                return GetRelatedEntity<dg_booking>("dg_dg_booking_dg_car_Booking", null);
            }
            set {
                SetRelatedEntity("dg_dg_booking_dg_car_Booking", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_dg_car_dg_booking_Car")]
        public IEnumerable<dg_booking> dg_dg_car_dg_booking_Car {
            get {
                return GetRelatedEntities<dg_booking>("dg_dg_car_dg_booking_Car", null);
            }
            set {
                SetRelatedEntities("dg_dg_car_dg_booking_Car", null, value);
            }
        }
    }
    
    [EntityLogicalName("dg_country")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_country : ExtendedEntity<dg_countryState, dg_country_statuscode> {
        
        public const string EntityLogicalName = "dg_country";
        
        public const int EntityTypeCode = 10009;
        
        public dg_country() : 
                base(EntityLogicalName) {
        }
        
        public dg_country(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dg_name");
            }
        }
        
        [AttributeLogicalName("dg_countryid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_countryid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Country</para>
        /// </summary>
        [AttributeLogicalName("dg_countryid")]
        public Guid? dg_countryId {
            get {
                return GetAttributeValue<Guid?>("dg_countryid");
            }
            set {
                SetId("dg_countryid", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Country</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public dg_country_statuscode? statuscode {
            get {
                return GetOptionSetValue<dg_country_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Country</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        public dg_countryState? statecode {
            get {
                return GetOptionSetValue<dg_countryState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        [AttributeLogicalName("organizationidname")]
        public string OrganizationIdName {
            get {
                return GetAttributeValue<string>("organizationidname");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the organization</para>
        /// <para>Display Name: Organization Id</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfbyname")]
        public string ModifiedOnBehalfByName {
            get {
                return GetAttributeValue<string>("modifiedonbehalfbyname");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        [AttributeLogicalName("modifiedbyname")]
        public string ModifiedByName {
            get {
                return GetAttributeValue<string>("modifiedbyname");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        public string dg_name {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para></para>
        /// <para>Display Name: ISO 3166 Code</para>
        /// </summary>
        [AttributeLogicalName("dg_iso3166code")]
        public string dg_ISO3166Code {
            get {
                return GetAttributeValue<string>("dg_iso3166code");
            }
            set {
                SetAttributeValue("dg_iso3166code", value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfbyname")]
        public string CreatedOnBehalfByName {
            get {
                return GetAttributeValue<string>("createdonbehalfbyname");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        [AttributeLogicalName("createdbyname")]
        public string CreatedByName {
            get {
                return GetAttributeValue<string>("createdbyname");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        [RelationshipSchemaName("dg_dg_country_dg_car_Country")]
        public IEnumerable<dg_car> dg_dg_country_dg_car_Country {
            get {
                return GetRelatedEntities<dg_car>("dg_dg_country_dg_car_Country", null);
            }
            set {
                SetRelatedEntities("dg_dg_country_dg_car_Country", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_dg_country_dg_hotel_Country")]
        public IEnumerable<dg_hotel> dg_dg_country_dg_hotel_Country {
            get {
                return GetRelatedEntities<dg_hotel>("dg_dg_country_dg_hotel_Country", null);
            }
            set {
                SetRelatedEntities("dg_dg_country_dg_hotel_Country", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_dg_country_dg_plane_Country")]
        public IEnumerable<dg_plane> dg_dg_country_dg_plane_Country {
            get {
                return GetRelatedEntities<dg_plane>("dg_dg_country_dg_plane_Country", null);
            }
            set {
                SetRelatedEntities("dg_dg_country_dg_plane_Country", null, value);
            }
        }
    }
    
    [EntityLogicalName("dg_hotel")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_hotel : ExtendedEntity<dg_hotelState, dg_hotel_statuscode> {
        
        public const string EntityLogicalName = "dg_hotel";
        
        public const int EntityTypeCode = 10007;
        
        public dg_hotel() : 
                base(EntityLogicalName) {
        }
        
        public dg_hotel(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dg_name");
            }
        }
        
        [AttributeLogicalName("dg_hotelid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_hotelid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Hotel</para>
        /// </summary>
        [AttributeLogicalName("dg_hotelid")]
        public Guid? dg_hotelId {
            get {
                return GetAttributeValue<Guid?>("dg_hotelid");
            }
            set {
                SetId("dg_hotelid", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Hotel</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public dg_hotel_statuscode? statuscode {
            get {
                return GetOptionSetValue<dg_hotel_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Hotel</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        public dg_hotelState? statecode {
            get {
                return GetOptionSetValue<dg_hotelState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Owner Id Type</para>
        /// </summary>
        [AttributeLogicalName("owneridtype")]
        public string OwnerIdType {
            get {
                return GetAttributeValue<string>("owneridtype");
            }
            set {
                SetAttributeValue("owneridtype", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the owner</para>
        /// </summary>
        [AttributeLogicalName("owneridname")]
        public string OwnerIdName {
            get {
                return GetAttributeValue<string>("owneridname");
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfbyname")]
        public string ModifiedOnBehalfByName {
            get {
                return GetAttributeValue<string>("modifiedonbehalfbyname");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        [AttributeLogicalName("modifiedbyname")]
        public string ModifiedByName {
            get {
                return GetAttributeValue<string>("modifiedbyname");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        public string dg_name {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        /// <summary>
        /// <para></para>
        /// <para>Display Name: Departure</para>
        /// </summary>
        [AttributeLogicalName("dg_departure")]
        public DateTime? dg_Departure {
            get {
                return GetAttributeValue<DateTime?>("dg_departure");
            }
            set {
                SetAttributeValue("dg_departure", value);
            }
        }
        
        [AttributeLogicalName("dg_countryname")]
        public string dg_CountryName {
            get {
                return GetAttributeValue<string>("dg_countryname");
            }
        }
        
        /// <summary>
        /// <para></para>
        /// <para>Display Name: Country</para>
        /// </summary>
        [AttributeLogicalName("dg_country")]
        public EntityReference dg_Country {
            get {
                return GetAttributeValue<EntityReference>("dg_country");
            }
            set {
                SetAttributeValue("dg_country", value);
            }
        }
        
        [AttributeLogicalName("dg_bookingname")]
        public string dg_BookingName {
            get {
                return GetAttributeValue<string>("dg_bookingname");
            }
        }
        
        /// <summary>
        /// <para></para>
        /// <para>Display Name: Booking</para>
        /// </summary>
        [AttributeLogicalName("dg_booking")]
        public EntityReference dg_Booking {
            get {
                return GetAttributeValue<EntityReference>("dg_booking");
            }
            set {
                SetAttributeValue("dg_booking", value);
            }
        }
        
        /// <summary>
        /// <para></para>
        /// <para>Display Name: Arrival</para>
        /// </summary>
        [AttributeLogicalName("dg_arrival")]
        public DateTime? dg_Arrival {
            get {
                return GetAttributeValue<DateTime?>("dg_arrival");
            }
            set {
                SetAttributeValue("dg_arrival", value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfbyname")]
        public string CreatedOnBehalfByName {
            get {
                return GetAttributeValue<string>("createdonbehalfbyname");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        [AttributeLogicalName("createdbyname")]
        public string CreatedByName {
            get {
                return GetAttributeValue<string>("createdbyname");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        [AttributeLogicalName("dg_country")]
        [RelationshipSchemaName("dg_dg_country_dg_hotel_Country")]
        public dg_country dg_dg_country_dg_hotel_Country {
            get {
                return GetRelatedEntity<dg_country>("dg_dg_country_dg_hotel_Country", null);
            }
            set {
                SetRelatedEntity("dg_dg_country_dg_hotel_Country", null, value);
            }
        }
        
        [AttributeLogicalName("dg_booking")]
        [RelationshipSchemaName("dg_dg_booking_dg_hotel_Booking")]
        public dg_booking dg_dg_booking_dg_hotel_Booking {
            get {
                return GetRelatedEntity<dg_booking>("dg_dg_booking_dg_hotel_Booking", null);
            }
            set {
                SetRelatedEntity("dg_dg_booking_dg_hotel_Booking", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_dg_hotel_dg_booking_Hotel")]
        public IEnumerable<dg_booking> dg_dg_hotel_dg_booking_Hotel {
            get {
                return GetRelatedEntities<dg_booking>("dg_dg_hotel_dg_booking_Hotel", null);
            }
            set {
                SetRelatedEntities("dg_dg_hotel_dg_booking_Hotel", null, value);
            }
        }
    }
    
    [EntityLogicalName("dg_plane")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dg_plane : ExtendedEntity<dg_planeState, dg_plane_statuscode> {
        
        public const string EntityLogicalName = "dg_plane";
        
        public const int EntityTypeCode = 10006;
        
        public dg_plane() : 
                base(EntityLogicalName) {
        }
        
        public dg_plane(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dg_name");
            }
        }
        
        [AttributeLogicalName("dg_planeid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dg_planeid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Plane</para>
        /// </summary>
        [AttributeLogicalName("dg_planeid")]
        public Guid? dg_planeId {
            get {
                return GetAttributeValue<Guid?>("dg_planeid");
            }
            set {
                SetId("dg_planeid", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Plane</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public dg_plane_statuscode? statuscode {
            get {
                return GetOptionSetValue<dg_plane_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Plane</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        public dg_planeState? statecode {
            get {
                return GetOptionSetValue<dg_planeState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Owner Id Type</para>
        /// </summary>
        [AttributeLogicalName("owneridtype")]
        public string OwnerIdType {
            get {
                return GetAttributeValue<string>("owneridtype");
            }
            set {
                SetAttributeValue("owneridtype", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the owner</para>
        /// </summary>
        [AttributeLogicalName("owneridname")]
        public string OwnerIdName {
            get {
                return GetAttributeValue<string>("owneridname");
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfbyname")]
        public string ModifiedOnBehalfByName {
            get {
                return GetAttributeValue<string>("modifiedonbehalfbyname");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        [AttributeLogicalName("modifiedbyname")]
        public string ModifiedByName {
            get {
                return GetAttributeValue<string>("modifiedbyname");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para></para>
        /// <para>Display Name: Return</para>
        /// </summary>
        [AttributeLogicalName("dg_return")]
        public DateTime? dg_Return {
            get {
                return GetAttributeValue<DateTime?>("dg_return");
            }
            set {
                SetAttributeValue("dg_return", value);
            }
        }
        
        /// <summary>
        /// <para></para>
        /// <para>Display Name: Outbound</para>
        /// </summary>
        [AttributeLogicalName("dg_outbound")]
        public DateTime? dg_Outbound {
            get {
                return GetAttributeValue<DateTime?>("dg_outbound");
            }
            set {
                SetAttributeValue("dg_outbound", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dg_name")]
        public string dg_name {
            get {
                return GetAttributeValue<string>("dg_name");
            }
            set {
                SetAttributeValue("dg_name", value);
            }
        }
        
        [AttributeLogicalName("dg_countryname")]
        public string dg_CountryName {
            get {
                return GetAttributeValue<string>("dg_countryname");
            }
        }
        
        /// <summary>
        /// <para></para>
        /// <para>Display Name: Country</para>
        /// </summary>
        [AttributeLogicalName("dg_country")]
        public EntityReference dg_Country {
            get {
                return GetAttributeValue<EntityReference>("dg_country");
            }
            set {
                SetAttributeValue("dg_country", value);
            }
        }
        
        [AttributeLogicalName("dg_bookingname")]
        public string dg_BookingName {
            get {
                return GetAttributeValue<string>("dg_bookingname");
            }
        }
        
        /// <summary>
        /// <para></para>
        /// <para>Display Name: Booking</para>
        /// </summary>
        [AttributeLogicalName("dg_booking")]
        public EntityReference dg_Booking {
            get {
                return GetAttributeValue<EntityReference>("dg_booking");
            }
            set {
                SetAttributeValue("dg_booking", value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfbyname")]
        public string CreatedOnBehalfByName {
            get {
                return GetAttributeValue<string>("createdonbehalfbyname");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        [AttributeLogicalName("createdbyname")]
        public string CreatedByName {
            get {
                return GetAttributeValue<string>("createdbyname");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        [AttributeLogicalName("dg_country")]
        [RelationshipSchemaName("dg_dg_country_dg_plane_Country")]
        public dg_country dg_dg_country_dg_plane_Country {
            get {
                return GetRelatedEntity<dg_country>("dg_dg_country_dg_plane_Country", null);
            }
            set {
                SetRelatedEntity("dg_dg_country_dg_plane_Country", null, value);
            }
        }
        
        [AttributeLogicalName("dg_booking")]
        [RelationshipSchemaName("dg_dg_booking_dg_plane_Booking")]
        public dg_booking dg_dg_booking_dg_plane_Booking {
            get {
                return GetRelatedEntity<dg_booking>("dg_dg_booking_dg_plane_Booking", null);
            }
            set {
                SetRelatedEntity("dg_dg_booking_dg_plane_Booking", null, value);
            }
        }
        
        [RelationshipSchemaName("dg_dg_plane_dg_booking_Plane")]
        public IEnumerable<dg_booking> dg_dg_plane_dg_booking_Plane {
            get {
                return GetRelatedEntities<dg_booking>("dg_dg_plane_dg_booking_Plane", null);
            }
            set {
                SetRelatedEntities("dg_dg_plane_dg_booking_Plane", null, value);
            }
        }
    }
    
    public partial class Xrm : ExtendedOrganizationServiceContext {
        
        public Xrm(IOrganizationService service) : 
                base(service) {
        }
        
        public IQueryable<dg_booking> dg_bookingSet {
            get {
                return CreateQuery<dg_booking>();
            }
        }
        
        public IQueryable<dg_car> dg_carSet {
            get {
                return CreateQuery<dg_car>();
            }
        }
        
        public IQueryable<dg_country> dg_countrySet {
            get {
                return CreateQuery<dg_country>();
            }
        }
        
        public IQueryable<dg_hotel> dg_hotelSet {
            get {
                return CreateQuery<dg_hotel>();
            }
        }
        
        public IQueryable<dg_plane> dg_planeSet {
            get {
                return CreateQuery<dg_plane>();
            }
        }
    }
}
